 
Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

 

Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9
 

Constraints:

0 <= nums.length <= 105
-109 <= nums[i] <= 109



```

class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        unordered_set<int> set;
        for(int num:nums){
            set.insert(num);
        }
        int longestConsecutive = 0;
        for(int num:nums){
            if(set.find(num-1) == set.end()){
                int currentConsecutive =1;
                int currentNum = num;
                while(set.find(currentNum +1)!= set.end()){
                    currentNum++;
                    currentConsecutive++;
                }
                longestConsecutive = max(longestConsecutive, currentConsecutive);

            }

        }
        return longestConsecutive;
    }
};

```
